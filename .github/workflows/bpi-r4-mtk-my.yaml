---
# More about feed: https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/
#
# NOTE: There are two versions:
# - https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/#filogic-880-wifi7-update_to_date-release (is failing in patches mt76)
# - https://git01.mediatek.com/plugins/gitiles/openwrt/feeds/mtk-openwrt-feeds/+/refs/heads/master/autobuild/unified/#filogic-880-wifi7-alpha-release-2024_12_06
#
name: Build image for BPi-R4 with MTK feed - alt - my config

on:
  workflow_dispatch:
    inputs:
      DEVICE_CONFIG:
        description: "Device configuration selection: <none> or poe (default: non-poe)"
        required: true
        type: choice
        default: 'non-poe'
        options:
          - poe
          - non-poe

env:
  # OpenWrt
  OPENWRT_REPOSITORY: https://github.com/openwrt/openwrt
  # OPENWRT_REF: openwrt-24.10
  OPENWRT_REF: openwrt-24.10
  # Mediatek Feed
  MEDIATEK_REPOSITORY: https://git01.mediatek.com/openwrt/feeds/mtk-openwrt-feeds
  MEDIATEK_REF: master
  # MEDIATEK_REF: 47fd8068e3bcd23bb606c711ed50149b266f09af
  # Configuration
  RELEASE_PREFIX: bpi-r4-mtk
  UPSTREAM_CONFIG_BASE_URL: https://raw.githubusercontent.com/danpawlik/openwrt-builder/master/configs/
  UPSTREAM_CONFIG_PARTS: |
    ${{ inputs.DEVICE_CONFIG == 'poe' && 'mediatek/mt7988a/bpi-r4-poe' || 'mediatek/mt7988a/bpi-r4' }}
    common/main-router
    common/snapshot-short
    common/snapshot-mtk-feed
    common/openssl
  LOCAL_CONFIG_PART: config.append
  MTK_FEEDS_CACHE_KEY: ${{ github.repository }}/mtk-openwrt-feeds

jobs:

  build:
    name: Build BPI-R4 with MTK feed - alt with my config
    runs-on: ubuntu-24.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget curl zstd \
            git libcurl4-openssl-dev

      - name: Checkout remote repository
        uses: actions/checkout@v4

      - name: Clone OpenWrt
        run: |
          git clone ${{ env.OPENWRT_REPOSITORY }} openwrt;
          cd openwrt;
          git checkout ${{ env.OPENWRT_REF }}

      - name: Restore mediatek feed to avoid long checkout
        id: restore_mtk_cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.MTK_FEEDS_CACHE_KEY }}
          path: mtk-openwrt-feeds

      - name: Clone mediatek feed
        if: ${{ steps.restore_mtk_cache.outputs.cache-hit != 'true' }}
        run: |
          rm -rf mtk-openwrt-feeds
          git clone ${{ env.MEDIATEK_REPOSITORY }} mtk-openwrt-feeds;

      - name: Checkout required ref
        id: checkout_ref
        run: |
          update="false"
          cd mtk-openwrt-feeds
          if ! git checkout ${{ env.MEDIATEK_REF }}; then
            echo "Reference not found in current repository"
            git fetch
            git checkout ${{ env.MEDIATEK_REF }}
            update="true"
          fi

          if git show-ref --verify refs/heads/${{ env.MEDIATEK_REF }} 2>/dev/null; then
            echo "Updating MTK branch"
            if [ "$update" != "true" ]; then
              before_update=$(git rev-parse HEAD)
              git pull
              after_update=$(git rev-parse HEAD)
              if [ "${before_update}" != "${after_update}" ]; then
                update="true"
              fi
            fi
          fi

          echo "update=$update" >> $GITHUB_OUTPUT

      - name: Save mediatek feed to avoid next long checkout
        uses: actions/cache/save@v4
        if: (steps.restore_mtk_cache.outputs.cache-hit != 'true') || (steps.checkout_ref.outputs.update == 'true')
        with:
          key: ${{ env.MTK_FEEDS_CACHE_KEY }}
          path: mtk-openwrt-feeds

      - name: Add custom feeds
        run: |
          {
            echo "src-git modemfeed https://github.com/koshev-msk/modemfeed.git"
            echo "src-git luci_app_3ginfo_lite https://github.com/4IceG/luci-app-3ginfo-lite.git"
            echo "src-git luci_app_atinout_mod https://github.com/4IceG/luci-app-atinout-mod.git"
            echo "src-git luci_app_modemband https://github.com/4IceG/luci-app-modemband.git"
          } | tee -a openwrt/feeds.conf.default

      - name: Change autobuild rules - important
        run: |
          cd openwrt;
          cp ../my_files/rules ../mtk-openwrt-feeds/autobuild/unified

      - name: Make sed
        run: |
          sed -i 's/CONFIG_PACKAGE_perf=y/# CONFIG_PACKAGE_perf is not set/' \
              ./mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/defconfig \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config

          sed -i 's/CONFIG_PACKAGE_kmod-thermal=y/# CONFIG_PACKAGE_kmod-thermal is not set/' \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7981_mac80211/.config \
              ./mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config

      - name: Add temporary workaround
        run: |
          cd openwrt;
          cp ../my_files/ethtool/Makefile package/network/utils/ethtool/Makefile
          rm ../mtk-openwrt-feeds/autobuild/unified/global/24.10/patches-base/0007-package-network-ethtool-downgrade-to-version-6.7.patch || true

      - name: Run Mediatek prepare
        run: |
          cd openwrt;
          bash ../mtk-openwrt-feeds/autobuild/unified/autobuild.sh filogic-mac80211-mt7988_rfb-mt7996 prepare log_file=make

      - name: Add patch for wifi power
        run: |
          cd openwrt;
          curl -SL https://github.com/openwrt/mt76/pull/954/commits/8088940ffd047a6d282a95af829562e8038f5b2d.patch | tee package/kernel/mt76/patches/0077-Yukariin-fix-wifi-power.patch

      - name: Do not create sample wireless networks
        run: |
          cd openwrt;
          git checkout package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc

      - name: Print current config file
        run: |
          cd openwrt;
          cat .config

      - name: Configure firmware image
        run: |
          {
            for config_part in $(echo "${UPSTREAM_CONFIG_PARTS}" | sed '/^[[:space:]]*$/d'); do
              echo "## Configuration: ${config_part}"
              curl -sSL "${UPSTREAM_CONFIG_BASE_URL}${config_part}"
              echo ""
            done

            if [ ! -z "${LOCAL_CONFIG_PART}" ]; then
              echo "## Configuration (local): ${LOCAL_CONFIG_PART}"
              cat "configs/${LOCAL_CONFIG_PART}"
              echo ""
            fi

            # Enable openssl
            if [[ $UPSTREAM_CONFIG_PARTS == *"common/openssl"* ]]; then
              echo "## Enable openssl handling"
              echo "CONFIG_PACKAGE_wpad-mbedtls=n"
              echo "CONFIG_PACKAGE_wpad-basic-mbedtls=n"
              echo ""
            fi
          } > >(tee openwrt/.config)

      - name: Run defconfig
        run: |
          cd openwrt;
          make defconfig

      - name: Comment mtk internal package
        run: |
          cd openwrt;
          sed -i 's/CONFIG_PACKAGE_kmod-crypto-eip=y/# CONFIG_PACKAGE_kmod-crypto-eip is not set/g' .config

      - name: Remove packages that are marked as modules
        run: |
          cd openwrt;
          grep "=m" .config | grep -v 'CONFIG_PACKAGE_libustream-mbedtls=m' | while read -r line; do module=$(echo "$line" | cut -f1 -d'='); sed -i "s/^$line$/# $module is not set/" .config; done

      - name: Build the firmware image
        run: |
          cd openwrt;
          make -j $(nproc) defconfig download world

      - name: Compress all packages
        run: |
          cd openwrt;
          tar caf bin/targets/mediatek/filogic/packages.tar.gz bin/targets/mediatek/filogic/packages

      - name: Add config file
        run: |
          cd openwrt;
          cp .config  bin/targets/mediatek/filogic/config-full

      - name: Package output
        run: |
          cd openwrt;
          tar -cvf ../bpi_r4-images.tar bin/targets/mediatek/filogic

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpi_r4-images
          path: bpi_r4-images.tar

  release:
    name: Create release
    needs: [build]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bpi_r4-images

      - name: Extract artifacts
        run: tar xf bpi_r4-images.tar

      - name: Get current date
        id: current_date
        run: echo "date=$(date +%F)" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: bin/targets/mediatek/filogic/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ github.ref_name }}-${{ steps.current_date.outputs.date }}
          name: OpenWRT BPI-R4 with MTK Feed with my packages ${{ inputs.DEVICE_CONFIG == 'poe' && 'POE' || '' }} - ${{ steps.current_date.outputs.date }}
          body: |
            Updated prebuilt images for BPI-R4 ${{ inputs.DEVICE_CONFIG == 'poe' && 'PoE version' || '' }}  with MTK feed and my custom packages

            OpenWrt ref: ${{ env.OPENWRT_REF }}
            Mediatek feed ref: ${{ env.MEDIATEK_REF }}
            Project ref: ${{ github.ref }}

      - name: Clean up old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 5
          delete_tags: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
