name: Build OpenWrt

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  BASE_CONFIG: config.ext-upd-1.0
  APPEND_CONFIG: config.alryaz

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore cached Primes
      id: cache-primes-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          path/to/dependencies
          some/other/dependencies
        key: ${{ runner.os }}-primes

    - name: Clone OpenWrt repository
      run: |
        git clone --single-branch --branch openwrt-24.10 https://git.openwrt.org/openwrt/openwrt.git openwrt
        cd openwrt
        git checkout 68bf4844a1cbc9f404f6e93b70a2657e74f1dce9

    - name: Clone MTK OpenWrt feeds repository
      run: |
        git clone --single-branch --branch master https://git01.mediatek.com/openwrt/feeds/mtk-openwrt-feeds
        cd mtk-openwrt-feeds
        git checkout 42df09d4cf568c795e71427668fae0eea4f112c5

    - name: Modify build environment
      run: |
        echo "::group::Remove existing patches"
        rm -rf openwrt/package/firmware/wireless-regdb/patches/*.*
        echo "::endgroup::"

        echo "::group::Copy regdb configuration"
        cp -r my_files/500-tx_power.patch mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/firmware/wireless-regdb/patches
        cp -r my_files/regdb.Makefile openwrt/package/firmware/wireless-regdb/Makefile
        cp -r my_files/rules mtk-openwrt-feeds/autobuild/unified
        echo "::endgroup::"

        echo "::group::Copy device trees"
        cp -r my_files/mt7988a-rfb-spim-nand-nmbm.dtso openwrt/target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek
        cp -r my_files/mt7981-rfb-spim-nor.dtso openwrt/target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek
        cp -r my_files/mt7988d-rfb.dts openwrt/target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek
        cp -r my_files/mt7988a-rfb-spidev.dtso openwrt/target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek
        cp -r my_files/ethtool/Makefile openwrt/package/network/utils/ethtool/Makefile
        echo "::endgroup::"

    - name: Apply MediaTek buildroot patches
      run: |
        if [ -n "$(ls -A my_files/mediatek_buildroot_patches/*.patch 2>/dev/null)" ]; then
          cd mtk-openwrt-feeds
          git apply ../my_files/mediatek_buildroot_patches/*.patch
        fi

    - name: Add custom patches to MediaTek packages
      run: |
        echo "::group::Copy patches"
        rm -rf mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/firmware/wireless-regdb/patches/*.*
        cp -r my_files/999-2709-net-ethernet-mtk_eth_soc-add-rss-lro-reg.patch mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/patches-6.6/
        cp -r my_files/999-2710-net-ethernet-mtk_eth_soc-add-rss-support.patch mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/patches-6.6/
        cp -r my_files/0006-arch-arm64-dts-mt7988a-add-adma-intrrupts.patch mtk-openwrt-feeds/autobuild/unified/global/24.10/patches-base/
        cp -r my_files/mediatek/*.* mtk-openwrt-feeds/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/
        cp -r my_files/999-3000-netfilter-add-bridging-support-to-xt_FLOWOFFLOAD.patch mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/target/linux/mediatek/patches-6.6/999-3000-netfilter-add-bridging-support-to-xt_FLOWOFFLOAD.patch
        cp -r my_files/debugfs.c mtk-openwrt-feeds/feed/kernel/pce/src/debugfs.c
        cp -r my_files/nl.c mtk-openwrt-feeds/feed/app/atenl/src/nl.c
        cp -r my_files/99999_tx_power_check.patch mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/files/package/kernel/mt76/patches/
        echo "::endgroup::"

        echo "::group::Disable perf package by default"
        sed -i 's/CONFIG_PACKAGE_perf=y/# CONFIG_PACKAGE_perf is not set/' mtk-openwrt-feeds/autobuild/unified/filogic/mac80211/24.10/defconfig
        sed -i 's/CONFIG_PACKAGE_perf=y/# CONFIG_PACKAGE_perf is not set/' mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config
        sed -i 's/CONFIG_PACKAGE_perf=y/# CONFIG_PACKAGE_perf is not set/' mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config
        echo "::endgroup::"

        echo "::group::Disable kmod-thermal package by default"
        sed -i 's/CONFIG_PACKAGE_kmod-thermal=y/# CONFIG_PACKAGE_kmod-thermal is not set/' mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7988_wifi7_mac80211_mlo/.config
        sed -i 's/CONFIG_PACKAGE_kmod-thermal=y/# CONFIG_PACKAGE_kmod-thermal is not set/' mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7981_mac80211/.config
        sed -i 's/CONFIG_PACKAGE_kmod-thermal=y/# CONFIG_PACKAGE_kmod-thermal is not set/' mtk-openwrt-feeds/autobuild/autobuild_5.4_mac80211_release/mt7986_mac80211/.config
        echo "::endgroup::"
  
    - name: Run autobuild script
      run: |
        cd openwrt
        bash ../mtk-openwrt-feeds/autobuild/unified/autobuild.sh filogic-mac80211-bpi-r4 log_file=make
        cp -r ../my_files/w-mt7988a.dtsi target/linux/mediatek/files-6.6/arch/arm64/boot/dts/mediatek/mt7988a.dtsi

    - name: Add additional package feeds
      run: |
        {
          echo "src-git modemfeed https://github.com/koshev-msk/modemfeed.git"
          echo "src-git luci-app-3ginfo-lite https://github.com/4IceG/luci-app-3ginfo-lite.git"
          echo "src-git luci-app-atinout-mod https://github.com/4IceG/luci-app-atinout-mod.git"
          echo "src-git luci-app-modemband https://github.com/4IceG/luci-app-modemband.git"
        } >> openwrt/feeds.conf.default

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Copy base config file
      run: |
        cat configs/${{ env.BASE_CONFIG }} configs/${{ env.APPEND_CONFIG }} > openwrt/.config
        cd openwrt
        make defconfig

    - name: Download dependencies
      run: cd openwrt && make download V=sc -j$(($(nproc)+1))

    - name: Build the firmware image (multicore, unverbose)
      id: build_multiple_cores
      run: cd openwrt && make world -j$(($(nproc)+1))

    - name: Build the firmware image (single core, unverbose)
      if: failure() && steps.build_multiple_cores.conclusion == 'failure'
      id: build_single_core
      run: cd openwrt && make world V=sc -j1

    - name: Build the firmware image (single core, verbose)
      if: failure() && steps.build_single_core.conclusion == 'failure'
      id: pin_down_error
      run: cd openwrt && make world V=sc -j1 | tee build_error.log

    - name: Upload error log as artifact
      if: failure() && steps.pin_down_error.conclusion == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: build-error-{{ matrix.variation }}
        path: openwrt/build_error.log

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bpi-r4-images
        path: openwrt/bin/targets/mediatek/filogic
        if-no-files-found: 'error'