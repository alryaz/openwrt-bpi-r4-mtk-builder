diff --git a/feed/kernel/pce/src/debugfs.c b/feed/kernel/pce/src/debugfs.c
index fce9b92d..a5d4597b 100644
--- a/feed/kernel/pce/src/debugfs.c
+++ b/feed/kernel/pce/src/debugfs.c
@@ -10,6 +10,7 @@
 #include <linux/uaccess.h>
 
 #include "pce/cls.h"
+#include "pce/cdrt.h"
 #include "pce/debugfs.h"
 #include "pce/dipfilter.h"
 #include "pce/internal.h"
@@ -446,6 +447,34 @@ static int cls_entry_debug_open(struct inode *inode, struct file *file)
 	return single_open(file, cls_entry_debug_read, file->private_data);
 }
 
+static ssize_t cdrt_debug_write(struct file *file, const char __user *buffer,
+					size_t count, loff_t *data)
+{
+	return 0;
+}
+static int cdrt_debug_read(struct seq_file *s, void *private)
+{
+	struct cdrt_desc desc;
+	int ret;
+	u32 i;
+
+	for (i = 1; i < (FE_MEM_CDRT_MAX_INDEX / 3) - 1; i++) {
+		ret = mtk_pce_cdrt_desc_read(&desc, i);
+
+		seq_printf(s, "CDRT Entry%02u, Type: %02u, aad len: %u\n", i,
+				desc.desc1.ipsec.type, desc.desc1.token_len);
+		seq_printf(s, "\tTransform Record Address: %x\n", desc.desc1.p_tr[0]);
+		seq_printf(s, "\tHW Service: %u\n", desc.desc2.hw_srv);
+	}
+
+	return 0;
+}
+
+static int cdrt_debug_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, cdrt_debug_read, file->private_data);
+}
+
 static int dipfilter_debug_read(struct seq_file *s, void *private)
 {
 	struct dip_desc ddesc;
@@ -669,6 +698,14 @@ static ssize_t tport_map_debug_write(struct file *file, const char __user *buffe
 	return count;
 }
 
+static const struct file_operations cdrt_debug_ops = {
+	.open = cdrt_debug_open,
+	.read = seq_read,
+	.llseek = seq_lseek,
+	.write = cdrt_debug_write,
+	.release = single_release,
+};
+
 static const struct file_operations cls_entry_debug_ops = {
 	.open = cls_entry_debug_open,
 	.read = seq_read,
@@ -707,6 +744,8 @@ int mtk_pce_debugfs_init(struct platform_device *pdev)
 			    &dipfilter_debug_ops);
 	debugfs_create_file("tport_map", 0444, debug_root, NULL,
 			    &tport_map_debug_ops);
+	debugfs_create_file("cdrt", 0444, debug_root, NULL,
+				&cdrt_debug_ops);
 
 	return 0;
 }
