diff --git a/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/mtk_eth_dbg.c b/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/mtk_eth_dbg.c
index e25d8a82..76f60776 100644
--- a/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/mtk_eth_dbg.c
+++ b/autobuild/unified/global/24.10/files/target/linux/mediatek/files-6.6/drivers/net/ethernet/mediatek/mtk_eth_dbg.c
@@ -1730,6 +1730,7 @@ static const struct proc_ops hw_lro_stats_fops = {
 int hwlro_agg_cnt_ctrl(int cnt)
 {
 	struct mtk_eth *eth = g_eth;
+	const struct mtk_reg_map *reg_map = eth->soc->reg_map;
 	int i;
 
 	for (i = 1; i < MTK_MAX_RX_RING_NUM; i++)
@@ -1741,6 +1742,7 @@ int hwlro_agg_cnt_ctrl(int cnt)
 int hwlro_agg_time_ctrl(int time)
 {
 	struct mtk_eth *eth = g_eth;
+	const struct mtk_reg_map *reg_map = eth->soc->reg_map;
 	int i;
 
 	for (i = 1; i < MTK_MAX_RX_RING_NUM; i++)
@@ -1752,6 +1754,7 @@ int hwlro_agg_time_ctrl(int time)
 int hwlro_age_time_ctrl(int time)
 {
 	struct mtk_eth *eth = g_eth;
+	const struct mtk_reg_map *reg_map = eth->soc->reg_map;
 	int i;
 
 	for (i = 1; i < MTK_MAX_RX_RING_NUM; i++)
@@ -1771,6 +1774,7 @@ int hwlro_threshold_ctrl(int bandwidth)
 int hwlro_ring_enable_ctrl(int enable)
 {
 	struct mtk_eth *eth = g_eth;
+	const struct mtk_reg_map *reg_map = eth->soc->reg_map;
 	int i;
 
 	pr_info("[%s] %s HW LRO rings\n", __func__, (enable) ? "Enable" : "Disable");
@@ -1969,6 +1973,7 @@ void hw_lro_auto_tlb_dump_v2(struct seq_file *seq, u32 index)
 int hw_lro_auto_tlb_read(struct seq_file *seq, void *v)
 {
 	struct mtk_eth *eth = g_eth;
+	const struct mtk_reg_map *reg_map = eth->soc->reg_map;
 	int i;
 	u32 reg_val;
 	u32 reg_op1, reg_op2, reg_op3, reg_op4;
